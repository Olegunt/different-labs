#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define h 0.0001
double AD[4][4];
FILE *fp;

void DisplayVector(char s,double* vector)
{
    int k;
	for (k = 1; k < 4; k++)
	{
		printf("%c[%d]=%32.16f\n", s, k, vector[k]);
		fprintf(fp, "%c[%d]=%32.16f\n", s, k, vector[k]);
	}
}

void CalcVector(double* Ar,double t)
{
	int m;
	for(m = 1;m < 4;m++)
    	Ar[m] = exp(AD[m][m] * t);
}

void Pogr(double* A,double* C)
{
	double eps,eps1;
	int eps_i,j,k;
	for(k = 1;k<4;k++)
	{
		j = 0;
		eps = fabs((C[k]-A[k])/A[k]);
		eps1 = eps;
		eps_i = (int)eps1;
		do
		{
			eps1 = eps1*10 - eps_i*10;
			eps_i = (int)eps1;
			if(eps_i == 0)
				j++;
		}while(eps_i==0);
		printf("X[%d]:\neps=%32.16f\nepsComp=%11d\n",k,eps,j);
		fprintf(fp, "X[%d]:\neps=%32.16f\nepsComp=%11d\n",k,eps,j);
    }
}

int main()
{
	double X0[4],X1h[4],X[4],X_a[4];
    int i,k,m;

    fp = fopen("result.txt","w");     

    //Заполняем матрицу AD в соотв. с условием
    AD[1][1] = -100;
    AD[2][2] = -10;
    AD[3][3] = -1;
    for(i = 1;i < 4;i++)
    {
    	if(i == 1)
    		for(k=2;k<4;k++)
    			AD[i][k] = 0;
    	if(i == 2)
    		for(k=1;k<4;k+=2)
    			AD[i][k] = 0;
    	if(i == 3)
    		for(k=1;k<3;k+=1)
    			AD[i][k] = 0;
    }

    //Вычисляем вектор Х0 как Х(t) при t = 0
    CalcVector(X0,0);

    //Применяем метод явных трапеций для вычисления численного значения в-ра Х (BD = 0)
    for (i = 1; i < 4; i++)
	{
		X1h[i] = X0[i] + h*AD[i][i] * X0[i];                //1-ый этап интегрирования
		X[i] = X0[i] + (h / 2)*AD[i][i] * (X0[i] + X1h[i]); //2-ой этап интегрирования
	}

    //Выводим численное значение вектора Х на терминал и в файл результатов
    printf("numerical value of vector X:\n");
	fprintf(fp,"numerical value of vector X:\n");
    DisplayVector('X',X);

	//Вычисляем значение вектора Х с помощью данного аналитического решения
    CalcVector(X_a,h);

    //Выводим аналитическое значение вектора X на терминал и в файл результатов
    printf("analitic value of vector X:\n");
	fprintf(fp,"analitic value of vector X:\n");
    DisplayVector('X',X_a);
  
    //Cчитаем и выводим погрешности
    printf("error\n");
    fprintf(fp,"error\n");
    Pogr(X_a,X);

    fclose(fp);
}

